#!/bin/bash

do_save=0
if test "x$1" = "x--save"
then
	shift
	do_save=1
fi

do_rebase=0
if test "x$1" = "x--rebase"
then
	shift
	do_rebase=1
fi

if test "x$1" = "x--help" || test "x$1" = "x-h"
then
	echo "git sys-update - Get commits from a forein repository"
	echo
	echo "Usage: git sys-update [options] <variant1> <variant2> ..."
	echo
	echo "Options:"
	echo " --save - Save variants to /etc/sysgit/variants and use"
	echo "          them as default."
	echo " --rebase - Perfom git rebase instead of git merge."
	echo " --help - Show this help message."
	exit 2
fi


if test "x${1}" = "x"
then
	variants="base"
	if test -f "/etc/sysgit/variant"
	then
		variants="$(cat "/etc/sysgit/variant")"
	fi
else
	variants="$@"
fi

if test "x${do_save}" = "x1"
then
	echo "$@" >"/etc/sysgit/variant"
fi

cd /
git fetch --all

for v in ${variants}
do
	if test "x$(echo "${v}" | grep "/")" = "x"
	then
		v="upstream/${v}"
	fi
	echo "Updating variant: ${v}"

	if test "x${do_rebase}" = "x1"
	then
		git rebase --fork-point "${v}"
	else
		git merge "${v}"
	fi
done

#/.sysgit/init.sh update
